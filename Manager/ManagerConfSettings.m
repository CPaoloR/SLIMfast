classdef ManagerConfSettings < SuperclassManager
    %written by
    %C.P.Richter
    %Division of Biophysics / Group J.Piehler
    %University of Osnabrueck
    
    properties
        ExportBin
    end %properties
    properties (Hidden,Dependent)
        ExpDiffCoeff
        ConfAlgorithm
        TimeWindow
        ConfThresh
        MinConfTime
    end %properties
    properties (Transient)
        hParamFig
        hProfilePopup
        hProfileSaveButton
        hTrajIdPopup
        
        hChartFig
        hToolbar
        hLocDiffAx
        hLocDiffCoeffLine
        hLocDiffCoeffPatch
        hConfIdxAx
        hConfLine
        hConfPatch
        hTrajAx
        
        ConfAlgorithmList = {...
            'Meilhac et al.'}
    end %properties
    properties (Transient,Dependent)
        TrajectoryList
        SelectedTrajID
    end %properties
    
    methods
        %% constructor
        function this = ManagerConfSettings(parent)
            if nargin == 0
                parent = [];
            end %if
            this = this@SuperclassManager(parent);
            
            if nargin > 0
                check_settings(this)
            end %if
        end %fun
        function check_settings(this)
        end %fun
        
        function set_parameter(this)
            %check if gui already open
            if ishandle(this.hParamFig)
                waitfor(msgbox('ROI MANAGER already open','INFO','help','modal'))
                figure(this.hParamFig)
                return
            end %if
            
            y0 = 150;
            
            scrSize = get(0, 'ScreenSize');
            
            this.hParamFig = figure(...
                'Units','pixels',...
                'Position', [0.5*(scrSize(3)-225) 0.5*(scrSize(4)-y0) 225 y0],...
                'Color', this.FamilyColor,...
                'Name', 'CONFINEMENT MANAGER',...
                'NumberTitle', 'off',...
                'MenuBar', 'none',...
                'ToolBar', 'none',...
                'IntegerHandle','off',...
                'CloseRequestFcn',@(src,evnt)close_object(this));
            
            y = y0 -20;
            
            uicontrol(...
                'Parent', this.hParamFig,...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 50 15],...
                'FontSize', 8,...
                'String', 'Profile:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            get_actual_profiles(this.SrcContainer)
            this.hProfilePopup = ...
                uicontrol(...
                'Parent', this.hParamFig,...
                'Style', 'popupmenu',...
                'Units','pixels',...
                'Position', [60 y+1 115 15],...
                'FontSize', 7,...
                'String', this.SrcContainer.Profiles,...
                'Value', find(strcmp(this.SrcContainer.Profile,this.SrcContainer.Profiles)),...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_Profile(this,src));
            this.hProfileSaveButton = ...
                uicontrol(...
                'Style', 'pushbutton',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'String', 'Save',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left',...
                'Callback', @(src,evnt)save_actual_properties_as_profile(this.SrcContainer));
            
            y = y -20;
            
            uicontrol(...
                'Parent', this.hParamFig,...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 180 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', 'Exp. Diff. Coeff. [µm^2 s^-1]:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            uicontrol(...
                'Parent', this.hParamFig,...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.ExpDiffCoeff,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_ExpDiffCoeff(this,src));
            
            y = y -20;
            
            uicontrol(...
                'Parent', this.hParamFig,...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', 'Confinement Index:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            uicontrol(...
                'Style', 'popupmenu',...
                'Units','pixels',...
                'Position', [130 y+2 90 15],...
                'FontSize', 7,...
                'String', this.ConfAlgorithmList,...
                'Value', find(strcmp(this.ConfAlgorithm,this.ConfAlgorithmList)),...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_ConfAlgorithm(this,src),...
                'Enable','off');
            
            y = y -20;
            
            uicontrol(...
                'Parent', this.hParamFig,...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', 'Time Window [frames]:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            uicontrol(...
                'Parent', this.hParamFig,...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.TimeWindow,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_TimeWindow(this,src));
            
            y = y -20;
            
            uicontrol(...
                'Parent', this.hParamFig,...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', 'Conf. Threshold:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            uicontrol(...
                'Parent', this.hParamFig,...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.ConfThresh,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_ConfThresh(this,src),...
                'Enable','off');
            
            y = y -20;
            
            uicontrol(...
                'Parent', this.hParamFig,...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', 'Min. Conf. Time [frames]:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            uicontrol(...
                'Parent', this.hParamFig,...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.MinConfTime,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_MinConfTime(this,src));
            
            y = y -20;
            
            uicontrol(...
                'Parent', this.hParamFig,...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', 'Trajectory ID:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            this.hTrajIdPopup = ...
                uicontrol(...
                'Style', 'popupmenu',...
                'Units','pixels',...
                'Position', [110 y+2 110 15],...
                'FontSize', 7,...
                'String', this.TrajectoryList,...
                'Value', 1,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)update_charts(this));
            
            hList = get(this.hParamFig,'Children');
            set(hList,...
                'Units', 'normalized',...
                'FontUnits', 'normalized',...
                'FontWeight','bold')
            set(this.hParamFig,'Units','pixels',...
                'Position', set_figure_position(225/y0, 0.45/225*y0,'center'))
            
            initialize_charts(this)
            figure(this.hParamFig)
        end %fun
        function construct_image_toolbar(this)
            this.hToolbar = uitoolbar(...
                'Parent',this.hChartFig);
            icon = getappdata(0,'icon');
            uipushtool(...
                'Parent',this.hToolbar,...
                'CData', icon.('Save_Data'),...
                'ClickedCallback', @(src,evnt)write_variable_to_ascii(this))
            uitoggletool(...
                'Parent',this.hToolbar,...
                'CData', icon.('Zoom'),...
                'Tag','Zoom',...
                'Separator','on',...
                'ClickedCallback', @(src,evnt)set_zoom(src,'hFig',this.hChartFig,'Direction','horizontal'))
            uitoggletool(...
                'Parent',this.hToolbar,...
                'CData', icon.('Pan'),...
                'Tag','Pan',...
                'ClickedCallback', @(src,evnt)set_pan(src,'hFig',this.hChartFig,'Direction','horizontal'))
        end %fun
        
        %% getter
        function expdiffcoeff = get.ExpDiffCoeff(this)
            expdiffcoeff = this.SrcContainer.ExpDiffCoeff;
        end %fun
        function confalgorithm = get.ConfAlgorithm(this)
            confalgorithm = this.SrcContainer.ConfAlgorithm;
        end %fun
        function timewindow = get.TimeWindow(this)
            timewindow = this.SrcContainer.TimeWindow;
        end %fun
        function confthresh = get.ConfThresh(this)
            confthresh = this.SrcContainer.ConfThresh;
        end %fun
        function minconftime = get.MinConfTime(this)
            minconftime = this.SrcContainer.MinConfTime;
        end %fun
        
        function trajectorylist = get.TrajectoryList(this)
            actSubsetType = this.Parent.SubsetType;
            activeIdx = get_indices_for_active_set(...
                this.Parent,actSubsetType);
            trajectorylist = ...
                arrayfun(@(x)x.Data.Traj_ID_Hex(1,:),...
                transpose(this.Parent.objIndividual(activeIdx)),'Un',0);
        end %fun
        function selectedtrajid = get.SelectedTrajID(this)
            content = get(this.hTrajIdPopup,'String');
            selectedtrajid = content(get(this.hTrajIdPopup,'Value'),:);
        end %fun
        
        %% setter
        function set_Profile(this,src)
            content = get(src,'String');
            value = get(src,'Value');
            
            profile = content{value};
            update_profile(this,profile)
        end %fun
        
        function set_ExpDiffCoeff(this,src)
            value = max(0,str2double(get(src,'String')));
            set(src,'String', value)
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).ExpDiffCoeff = value;
            end %for
            this.SrcContainer.ExpDiffCoeff = value;
            
            update_profile(this,'None')
            update_charts(this)
        end %fun
        function set_TimeWindow(this,src)
            value = max(5,round(str2double(get(src,'String'))));
            if ~mod(value,2)
                %value must be odd
                value = value + 1;
            end %if
            set(src,'String', value)
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).TimeWindow = value;
            end %for
            this.SrcContainer.TimeWindow = value;
            
            update_profile(this,'None')
            update_charts(this)
        end %fun
        function set_ConfThresh(this,src)
            value = max(0,get(src,'String'));
            set(src,'String', value)
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).ConfThresh = value;
            end %for
            this.SrcContainer.ConfThresh = value;
            
            update_profile(this,'None')
            update_charts(this)
        end %fun
        function set_MinConfTime(this,src)
            value = max(1,round(str2double(get(src,'String'))));
            set(src,'String', value)
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).MinConfTime = value;
            end %for
            this.SrcContainer.MinConfTime = value;
            
            update_profile(this,'None')
            update_charts(this)
        end %fun
        
        %%
        function initialize_charts(this)
            %get actual selected trajectory
            good = strcmp(this.SelectedTrajID,this.TrajectoryList);
            objTraj = this.Parent.objIndividual(good);
            
            locDiffCoeff = ...
                window_analysis(objTraj,1,this.TimeWindow,'absolute',...
                3,'linear');
            
            [idxPos confinementIdx] = ...
                calculate_confinement_index(this,objTraj);
            isConfined = (confinementIdx >= this.ConfThresh);
            isConfined = filter_sparse_events(isConfined,this.MinConfTime);
            idxConfined = get_event_index(isConfined);
            numConfinements = size(idxConfined,1);
            cmap = jet(numConfinements);
            
            this.hChartFig = figure(...
                'Units','pixels',...
                'Position', set_figure_position(2.3, 0.6, 'center'),...
                'Color', [1 1 1],...
                'Name', 'CONFINEMENT MANAGER',...
                'NumberTitle', 'off',...
                'MenuBar', 'none',...
                'ToolBar', 'none',...
                'IntegerHandle','off',...
                'CloseRequestFcn',@(src,evnt)close_object(this));
            construct_image_toolbar(this)
            
            hPanel = uipanel(...
                'Units','normalized',...
                'Position',[0 0 0.5 0.5],...
                'FontSize',8,...
                'BackgroundColor', this.FamilyColor);
            this.hLocDiffAx = ...
                axes(...
                'Parent', hPanel,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'FontSize', 16,...
                'FontUnits', 'normalized',...
                'Box', 'on',...
                'NextPlot', 'add') ;
            this.hLocDiffCoeffPatch = ...
                patch(...
                'XData',[idxConfined fliplr(idxConfined)]',...
                'YData',[min(locDiffCoeff); min(locDiffCoeff); ...
                max(locDiffCoeff); max(locDiffCoeff)]*ones(1,numConfinements),...
                'CDataMapping','direct',...
                'FaceColor','flat',...
                'FaceVertexCData', cmap,...
                'FaceAlpha', 0.4,...
                'EdgeColor', 'none',...
                'Parent',this.hLocDiffAx);
            this.hLocDiffCoeffLine = ...
                line(idxPos,locDiffCoeff,...
                'Color', [0 0 0],...
                'Parent',this.hLocDiffAx);
            xlabel('Position')
            ylabel('Loc. Diff. Coeff. [µm^2 s^{-1}]')
            axis([min(idxPos) max(idxPos) ...
                min(locDiffCoeff) max(locDiffCoeff)])
            
            hPanel = uipanel(...
                'Units','normalized',...
                'Position',[0 0.5 0.5 0.5],...
                'FontSize',8,...
                'BackgroundColor', this.FamilyColor);
            this.hConfIdxAx = ...
                axes(...
                'Parent', hPanel,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'FontSize', 16,...
                'FontUnits', 'normalized',...
                'Box', 'on',...
                'NextPlot', 'add');
            this.hConfPatch = ...
                patch(...
                'XData',[idxConfined fliplr(idxConfined)]',...
                'YData',[min(confinementIdx); min(confinementIdx); ...
                max(confinementIdx); max(confinementIdx)]*ones(1,numConfinements),...
                'CDataMapping','direct',...
                'FaceColor','flat',...
                'FaceVertexCData', cmap,...
                'FaceAlpha', 0.4,...
                'EdgeColor', 'none',...
                'Parent',this.hConfIdxAx);
            this.hConfLine = ...
                line(idxPos,confinementIdx,...
                'Color', [0 0 0],...
                'Parent',this.hConfIdxAx);
            xlabel('Position')
            ylabel('Confinement Index')
            axis([min(idxPos) max(idxPos) ...
                min(confinementIdx) max(confinementIdx)])
            
            linkaxes([this.hLocDiffAx this.hConfIdxAx],'x')
            
            hPanel = uipanel(...
                'Units','normalized',...
                'Position',[0.5 0 0.5 1],...
                'FontSize',8,...
                'BackgroundColor', this.FamilyColor);
            this.hTrajAx = ...
                axes(...
                'Parent', hPanel,...
                'Units','normalized',...
                'OuterPosition', [0 0 1 1],...
                'FontSize', 16,...
                'FontUnits', 'normalized',...
                'Box', 'off',...
                'NextPlot', 'add') ;
            x = accumarray(objTraj.Hit,objTraj.Data.Position_X,...
                [objTraj.TotalObsTime 1],[],nan);
            y = accumarray(objTraj.Hit,objTraj.Data.Position_Y,...
                [objTraj.TotalObsTime 1],[],nan);
            line(x,y,...
                'Color', [0 0 0],...
                'Parent',this.hTrajAx);
            for idx = 1:numConfinements
                line(x(idxConfined(idx,1):idxConfined(idx,2)),...
                    y(idxConfined(idx,1):idxConfined(idx,2)),...
                    'Color', cmap(idx,:),...
                    'LineWidth',2,...
                    'Parent',this.hTrajAx);
            end %for
            xlabel('x-coordinate')
            ylabel('y-coordinate')
            axis(this.hTrajAx,'ij','equal')
        end %fun
        function update_charts(this)
            %get actual selected trajectory
            good = strcmp(this.SelectedTrajID,this.TrajectoryList);
            objTraj = this.Parent.objIndividual(good);
            
            if objTraj.NumPoints < this.TimeWindow
                set(this.hLocDiffCoeffPatch,...
                    'XData',[],...
                    'YData',[])
                set(this.hLocDiffCoeffLine,...
                    'XData',[],...
                    'YData',[])
                axis(this.hLocDiffAx,[0 1 0 1])
                set(this.hConfPatch,...
                    'XData',[],...
                    'YData',[])
                set(this.hConfLine,...
                    'XData',[],...
                    'YData',[])
                axis(this.hConfIdxAx,[0 1 0 1])
                cla(this.hTrajAx)
                return
            end %if
            
            locDiffCoeff = ...
                window_analysis(objTraj,1,this.TimeWindow,'absolute',...
                3,'linear');
            
            [idxPos confinementIdx] = ...
                calculate_confinement_index(this,objTraj);
            isConfined = (confinementIdx >= this.ConfThresh);
            isConfined = filter_sparse_events(isConfined,this.MinConfTime);
            idxConfined = get_event_index(isConfined);
            numConfinements = size(idxConfined,1);
            cmap = jet(numConfinements);
            
            set(this.hLocDiffCoeffPatch,...
                'XData',[idxConfined fliplr(idxConfined)]',...
                'YData',[min(locDiffCoeff); min(locDiffCoeff); ...
                max(locDiffCoeff); max(locDiffCoeff)]*ones(1,numConfinements),...
                'FaceVertexCData', cmap)
            set(this.hLocDiffCoeffLine,...
                'XData',idxPos,...
                'YData',locDiffCoeff)
            axis(this.hLocDiffAx,[min(idxPos) max(idxPos) ...
                min(locDiffCoeff) max(locDiffCoeff)])
            
            set(this.hConfPatch,...
                'XData',[idxConfined fliplr(idxConfined)]',...
                'YData',[min(confinementIdx); min(confinementIdx); ...
                max(confinementIdx); max(confinementIdx)]*ones(1,numConfinements),...
                'FaceVertexCData', cmap)
            set(this.hConfLine,...
                'XData',idxPos,...
                'YData',confinementIdx)
            axis(this.hConfIdxAx,[min(idxPos) max(idxPos) ...
                min(confinementIdx) max(confinementIdx)])
            
            cla(this.hTrajAx)
            x = accumarray(objTraj.Hit,objTraj.Data.Position_X,...
                [objTraj.TotalObsTime 1],[],nan);
            y = accumarray(objTraj.Hit,objTraj.Data.Position_Y,...
                [objTraj.TotalObsTime 1],[],nan);
            line(x,y,...
                'Color', [0 0 0],...
                'Parent',this.hTrajAx);
            for idx = 1:numConfinements
                line(x(idxConfined(idx,1):idxConfined(idx,2)),...
                    y(idxConfined(idx,1):idxConfined(idx,2)),...
                    'Color', cmap(idx,:),...
                    'LineWidth', 2,...
                    'Parent',this.hTrajAx);
            end %for
            axis(this.hTrajAx,'ij','equal')
        end %fun
        function [idxPos,confinementIdx] = ...
                calculate_confinement_index(this,objTraj)
            %calculate local diffusion coefficient
            [numSeg,idxSeg,~] = ...
                segmentize_trajectory(objTraj,this.TimeWindow);
            idxPos = 1:numSeg;
            
            %             switch this.ConfAlgorithm
            %                 case 'Meilhac et al.'
            %             segMiddle = idxSeg(ceil(this.TimeWindow/2),:);
            %             segMiddle = repmat(segMiddle,this.TimeWindow,1);
            
            x = objTraj.Data.Position_X * (this.Parent.Px2nm / 1000); %[µm]
            x = accumarray(objTraj.Hit,x,[objTraj.TotalObsTime 1],[],nan);
            %             dx = x(idxSeg)-x(segMiddle);
            y = objTraj.Data.Position_Y * (this.Parent.Px2nm / 1000); %[µm]
            y = accumarray(objTraj.Hit,y,[objTraj.TotalObsTime 1],[],nan);
            %             dy = y(idxSeg)-y(segMiddle);
            %             observedLocalSquareDisplacement = nanvar(sqrt(dx.^2+dy.^2),[],1); %[µm^2]
            
            observedLocalSquareDisplacement = nanvar(x(idxSeg))+nanvar(y(idxSeg));
            
            expectedSquareDisplacement = ...
                this.ExpDiffCoeff*this.TimeWindow*this.Parent.Frame2msec/1000; %[µm^2]
            confinementIdx(:,1) = expectedSquareDisplacement./observedLocalSquareDisplacement;
            %                 case 'Saxton'
            %                     refPoint = idxSeg(1,:);
            %                     segStart = repmat(refPoint,w,1);
            %                     displacement = max(reshape(sqrt(((x(idxSeg)-x(segStart))*px2micron).^2 +...
            %                         ((y(idxSeg)-y(segStart))*px2micron).^2),w,nrSeg));
            %                     psi = exp(0.2048 - (2.5117 * D * (w - 1 * lagTime))./...
            %                         displacement);
            %                     iConf(psi < 0.1) = -1*log(psi(psi < 0.1)) -1;
            %             end %switch
        end %fun
        
        %%
        function update_profile(this,profile)
            this.SrcContainer.Profile = profile;
            switch profile
                case 'None'
                    set(this.hProfilePopup,'Value',...
                        find(strcmp('None',this.SrcContainer.Profiles)))
                case 'Standard'
                    set_standard_properties(this.SrcContainer)
                    check_settings(this)
                    
                    close_object(this)
                    set_parameter(this)
                otherwise
                    SLIMfastPath = getappdata(0,'SLIMfastPath');
                    filename = fullfile(SLIMfastPath, ...
                        'Profiles', [this.SrcContainer.Profile '.txt']);
                    load_settings_from_disc(this.SrcContainer,filename)
                    check_settings(this)
                    
                    close_object(this)
                    set_parameter(this)
            end %switch
        end %fun
        
        %%
        function saveObj = saveobj(this)
            saveObj = saveobj@SuperclassManager(this);
        end %fun
        function close_object(this)
            if ishandle(this.hParamFig)
                delete(this.hParamFig)
            end %if
            if ishandle(this.hChartFig)
                delete(this.hChartFig)
            end %if
        end %fun
        function delete_object(this)
            if ishandle(this.hParamFig)
                delete(this.hParamFig)
            end %if
            if ishandle(this.hChartFig)
                delete(this.hChartFig)
            end %if
            
            delete_object@SuperclassManager(this)
        end %fun
    end %methods
    
    methods (Access = protected)
        function cpObj = copyElement(this)
            cpObj = copyElement@SuperclassManager(this);
        end %fun
    end %methods
    methods (Static)
        function this = loadobj(S)
            this = ManagerConfSettings;
            this = loadobj@SuperclassManager(this,S);
        end %fun
    end %methods
end %classdef