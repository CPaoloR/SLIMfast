classdef ManagerTrackSettings < SuperclassManager
    %written by
    %C.P.Richter
    %Division of Biophysics / Group J.Piehler
    %University of Osnabrueck
    
    properties(Hidden, Dependent)
        TrackStart
        TrackEnd
        
        Dim
        ResLimit %Resolution limit in pixels, to be used in calculating the merge/split search radius
        LocDensWin %Number of past frames used in nearest neighbor calculation
        GapPenalty %Gap length penalty (disappearing for n frames gets a penalty of gapPenalty^n)
        %Note that a penalty = 1 implies no penalty, while a penalty < 1 implies that longer gaps are favored
        
        %step1
        InitMinSearchRad %Search radius lower limit
        InitMaxSearchRad %Search radius upper limit
        InitSearchExpFac %Standard deviation multiplication factor
        InitUseLocDens %Flag for using local density in search radius estimation
        %         UseInitGapClosure
        %         InitMaxGap
        %step2
        MinCompoundLength %Minimum track segment length used in the gap closing, merging and splitting step
        MinSearchRad %Search radius lower limit
        MaxSearchRad %Search radius upper limit
        SearchExpFac %Standard deviation multiplication factor
        UseLocDens %Flag for using local density in search radius estimation
        FreeScaleFast %power for scaling the Brownian search radius with time
        FreeScaleSlow %power for scaling the Brownian search radius with time
        FreeScaleTrans
        UseGapClosure
        MaxGap
        UseMergeSplit %Flag for merging and splitting
        MinAmpRatio %Amplitude ratio lower limit
        MaxAmpRatio %Amplitude ratio upper limit
        
        UseLinModel %Flag for linear motion
        LinClassifyLength %Minimum length (frames) for track segment analysis
        LinSearchExpFac %Standard deviation multiplication factor along preferred direction of motion
        LinScaleFast %power for scaling the linear search radius with time
        LinScaleSlow %power for scaling the linear search radius with time
        LinScaleTrans
        LinMaxAngle %Maximum angle between the directions of motion of two linear track segments that are allowed to get linked
    end %properties
    properties(Hidden, Transient)
        hFig = nan;
        hLinFig = nan;
        
        hProfilePopup
        hProfileSaveButton
        
        hLocDensEdit
        hLinMotionSettingPush
        %         hInitMaxGapEdit
        hMaxGapEdit
        hFreeScaleFastEdit
        hFreeScaleSlowEdit
        hMinAmpRatioEdit
        hMaxAmpRatioEdit
        
        %% Tooltips
        ToolTips = struct(...
            'SearchRadLim', sprintf(['\n'...
            'The lower bound does NOT mean that a particle has to move at least that number of pixels, \n'...
            'it simply sets a lower bound on the internally optimized search radius. \n'...
            'The particle can still move anywhere from zero pixels up to its search radius. \n'...
            'The upper bound on the search radius is a critical parameter that must be optimized per movie type. \n']),...
            'UseLocDens', sprintf(['\n'...
            'Use particle density, in addition to motion, to estimate search radius. \n'...
            'If unchecked, only motion is used. \n']),...
            'UseGapClosure', sprintf(['\n'...
            'Longest gap resulting from temporary particle disappearance \n'...
            'that the tracker will attempt to close. \n']),...
            'GapPenalty', sprintf(['\n'...
            'Penalty on gap length. A value x means that a gap of length n \n'...
            'will be penalized by a factor x^n. \n'...
            'EXAMPLE: For x > 1 longer gaps are penalized, \n'...
            'for p = 1 there is no gap length penalty, \n'...
            'while for p < 1 longer gaps are favored. \n']),...
            'SearchRadExpScale', sprintf(['\n'...
            'Since a particle moves further away with longer gaps, \n'...
            'its search radius is internally expanded with gap length. \n'...
            'This expansion can have two phases, a fast and a slow one. \n'...
            'The value defines the power with which the search radius scales with time. \n'...
            'EXAMPLE: For tracking particles exhibiting confined diffusion, \n'...
            'use 0.5 for the fast phase and 0.01 for the slow phase. \n']),...
            'MinCompoundLength', sprintf(['\n'...
            'Since false positives during detection generally lead to tracks with short lifetimes, \n'...
            'this parameter excludes very short tracks from participating  \n'...
            'in the gap closing, merging and splitting step. \n']),...
            'LocDensWin', sprintf(['\n'...
            '']))
    end %properties
    
    methods
        %% constructor
        function this = ManagerTrackSettings(parent)
            if nargin == 0
                parent = [];
            end %if
            this = this@SuperclassManager(parent);
            
            if nargin > 0
                check_settings(this)
            end %if
        end %fun
        function check_settings(this)
            this.SrcContainer.TrackStart = ...
                min(this.TrackEnd,max(this.Parent.LocStart,...
                this.TrackStart));
            
            this.SrcContainer.TrackEnd = ...
                min(this.Parent.LocEnd,max(this.TrackStart,...
                this.TrackEnd));
        end %fun
        
        %%
        function set_parameter(this)
            %check if gui already open
            if ishandle(this.hFig)
                waitfor(msgbox('TRACKING MANAGER already open','INFO','help','modal'))
                figure(this.hFig)
                return
            end %if
            
            y0 = 410;
            
            scrSize = get(0, 'ScreenSize');
            this.hFig = ...
                figure(...
                'Units','pixels',...
                'Position', ...
                [0.5*(scrSize(3)-225) 0.5*(scrSize(4)-y0) 225 y0],...
                'Name', 'TRACKING MANAGER',...
                'NumberTitle', 'off',...
                'MenuBar', 'none',...
                'ToolBar', 'none',...
                'DockControls', 'off',...
                'IntegerHandle','off',...
                'Resize','off',...
                'Color', this.FamilyColor);
            
            y = y0 -20;
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 50 15],...
                'FontSize', 8,...
                'String', 'Profile:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            get_actual_profiles(this.SrcContainer)
            this.hProfilePopup = ...
                uicontrol(...
                'Style', 'popupmenu',...
                'Units','pixels',...
                'Position', [60 y+1 115 15],...
                'FontSize', 7,...
                'String', this.SrcContainer.Profiles,...
                'Value', find(strcmp(this.SrcContainer.Profile,this.SrcContainer.Profiles)),...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_Profile(this,src));
            this.hProfileSaveButton = ...
            uicontrol(...
                'Style', 'pushbutton',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'String', 'Save',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left',...
                'Callback', @(src,evnt)save_actual_properties_as_profile(this.SrcContainer));
            
            y = y -20;
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'String', 'Tracking Range:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [140 y 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.TrackStart,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_TrackStart(this,src));
            
            uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.TrackEnd,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_TrackEnd(this,src));
            
            y = y -20;
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'String', 'Data Dimensionality:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            uicontrol(...
                'Style', 'popupmenu',...
                'Units','pixels',...
                'Position', [180 y+1 40 15],...
                'FontSize', 7,...
                'String', {'2D','3D'},...
                'Value', this.Dim,...
                'Callback', @(src,evnt)set_Dim(this,src),...
                'Enable','off');
            
            y = y -20;
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'String', 'Local Density Window [frames]:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            this.hLocDensEdit = ...
                uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'String', this.LocDensWin,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_LocDensWin(this,src));
            
            y = y -20;
            
            uicontrol(...
                'Style', 'checkbox',...
                'Units','pixels',...
                'Position', [5 y 150 15],...
                'FontSize', 8,...
                'BackgroundColor', this.FamilyColor,...
                'String', 'Special Motion Models',...
                'Value', this.UseLinModel,...
                'Callback', @(src,evnt)set_UseLinModel(this,src),...
                'Enable','off');
            
            this.hLinMotionSettingPush = ...
                uicontrol(...
                'Style', 'pushbutton',...
                'Units','pixels',...
                'Position', [160 y 60 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', 'Settings',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left',...
                'Callback', @(src,evnt)set_linear_parameter(this));
            if this.UseLinModel
                set(this.hLinMotionSettingPush,'Enable','on')
            else
                set(this.hLinMotionSettingPush,'Enable','off')
            end %if
            
            y = y -25;
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 215 15],...
                'FontSize', 10,...
                'FontWeight', 'bold',...
                'String', 'Frame-to-Frame Linking',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            y = y -20;
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'String', 'Search Limit [px]:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left',...
                'TooltipString', this.ToolTips.SearchRadLim);
            
            uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [140 y 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.InitMinSearchRad,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_InitMinSearchRad(this,src));
            
            uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.InitMaxSearchRad,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_InitMaxSearchRad(this,src));
            
            %                 y = y -20;
            %
            %                 uicontrol(...
            %                     'Style', 'Text',...
            %                     'Units','pixels',...
            %                     'Position', [5 y 170 15],...
            %                     'FontSize', 8,...
            %                     'String', 'Search Expansion Factor:',...
            %                     'BackgroundColor', this.FamilyColor,...
            %                     'HorizontalAlignment', 'left');
            %
            %                 uicontrol(...
            %                     'Style', 'edit',...
            %                     'Units','pixels',...
            %                     'Position', [180 y 40 15],...
            %                     'FontSize', 8,...
            %                     'String', this.InitSearchExpFac,...
            %                     'BackgroundColor', [1 1 1],...
            %                     'Callback', @(src,evnt)set_InitSearchExpFac(this,src));
            
            y = y -20;
            
            uicontrol(...
                'Style', 'checkbox',...
                'Units','pixels',...
                'Position', [5 y 215 15],...
                'FontSize', 8,...
                'BackgroundColor', this.FamilyColor,...
                'String', 'Adapt Search Radius to local Density',...
                'Value', this.InitUseLocDens,...
                'Callback', @(src,evnt)set_InitUseLocDens(this,src),...
                'TooltipString', this.ToolTips.UseLocDens);
            
            %                 y = y -20;
            %
            %                 uicontrol(...
            %                     'Style', 'checkbox',...
            %                     'Units','pixels',...
            %                     'Position', [5 y 170 15],...
            %                     'FontSize', 8,...
            %                     'BackgroundColor', this.FamilyColor,...
            %                     'String', 'Max. Gap Closure [frames]:',...
            %                     'Value', this.UseInitGapClosure,...
            %                     'Callback', @(src,evnt)set_InitUseGapClosure(this,src));
            %
            %                 this.hInitMaxGapEdit = ...
            %                     uicontrol(...
            %                     'Style', 'edit',...
            %                     'Units','pixels',...
            %                     'Position', [180 y 40 15],...
            %                     'FontSize', 8,...
            %                     'String', this.InitMaxGap,...
            %                     'BackgroundColor', [1 1 1],...
            %                     'Callback', @(src,evnt)set_InitMaxGap(this,src));
            %                 if this.UseInitGapClosure
            %                     set(this.hInitMaxGapEdit,'Enable','on')
            %                 else
            %                     set(this.hInitMaxGapEdit,'Enable','off')
            %                 end %if
            
            y = y -25;
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 215 15],...
                'FontSize', 10,...
                'FontWeight', 'bold',...
                'String', 'Track Assembly',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            y = y -20;
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'String', 'Min. Compound Length [frames]:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left',...
                'TooltipString', this.ToolTips.MinCompoundLength);
            
            uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'String', this.MinCompoundLength,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_MinCompoundLength(this,src));
            
            y = y -20;
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'String', 'Search Limit [px]:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left',...
                'TooltipString', this.ToolTips.SearchRadLim);
            
            uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [140 y 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.MinSearchRad,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_MinSearchRad(this,src));
            
            uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.MaxSearchRad,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_MaxSearchRad(this,src));
            
            %                 y = y -20;
            %
            %                 uicontrol(...
            %                     'Style', 'Text',...
            %                     'Units','pixels',...
            %                     'Position', [5 y 170 15],...
            %                     'FontSize', 8,...
            %                     'String', 'Search Expansion Factor:',...
            %                     'BackgroundColor', this.FamilyColor,...
            %                     'HorizontalAlignment', 'left');
            %
            %                 uicontrol(...
            %                     'Style', 'edit',...
            %                     'Units','pixels',...
            %                     'Position', [180 y 40 15],...
            %                     'FontSize', 8,...
            %                     'String', this.SearchExpFac,...
            %                     'BackgroundColor', [1 1 1],...
            %                     'Callback', @(src,evnt)set_SearchExpFac(this,src));
            
            y = y -20;
            
            uicontrol(...
                'Style', 'checkbox',...
                'Units','pixels',...
                'Position', [5 y 215 15],...
                'FontSize', 8,...
                'BackgroundColor', this.FamilyColor,...
                'String', 'Adapt Search Radius to local Density',...
                'Value', this.UseLocDens,...
                'Callback', @(src,evnt)set_UseLocDens(this,src),...
                'TooltipString', this.ToolTips.UseLocDens);
            
            y = y -20;
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'String', 'Max. Gap Closure [frames]:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left',...
                'TooltipString', this.ToolTips.UseGapClosure)
            
            %             uicontrol(...
            %                 'Style', 'checkbox',...
            %                 'Units','pixels',...
            %                 'Position', [5 y 170 15],...
            %                 'FontSize', 8,...
            %                 'BackgroundColor', this.FamilyColor,...
            %                 'String', 'Max. Gap Closure [frames]:',...
            %                 'Value', this.UseGapClosure,...
            %                 'Callback', @(src,evnt)set_UseGapClosure(this,src),...
            %                 'TooltipString', this.ToolTips.UseGapClosure);
            
            this.hMaxGapEdit = ...
                uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'String', this.MaxGap,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_MaxGap(this,src));
            %             if this.UseGapClosure
            %                 set(this.hMaxGapEdit,'Enable','on')
            %             else
            %                 set(this.hMaxGapEdit,'Enable','off')
            %             end %if
            
            y = y -20;
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'String', 'Gap Length Penalty:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left',...
                'TooltipString', this.ToolTips.GapPenalty);
            
            uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'String', this.GapPenalty,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_GapPenalty(this,src));
            
            y = y -20;
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'String', 'Fast/Slow Phase Scaling:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left',...
                'TooltipString', this.ToolTips.SearchRadExpScale);
            
            this.hFreeScaleFastEdit = ...
                uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [140 y 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.FreeScaleFast,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_FreeScaleFast(this,src));
            %             if this.UseGapClosure
            %                 set(this.hFreeScaleFastEdit,'Enable','on')
            %             else
            %                 set(this.hFreeScaleFastEdit,'Enable','off')
            %             end %if
            
            this.hFreeScaleSlowEdit = ...
                uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.FreeScaleSlow,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_FreeScaleSlow(this,src));
            %             if this.UseGapClosure
            %                 set(this.hFreeScaleSlowEdit,'Enable','on')
            %             else
            %                 set(this.hFreeScaleSlowEdit,'Enable','off')
            %             end %if
            
            y = y -20;
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'String', 'Phase Transition Point [frames]:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'String', this.FreeScaleTrans,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_FreeScaleTrans(this,src));
            
            y = y -20;
            
            uicontrol(...
                'Style', 'checkbox',...
                'Units','pixels',...
                'Position', [5 y 200 15],...
                'FontSize', 8,...
                'BackgroundColor', this.FamilyColor,...
                'String', 'Trajectories can Merge and Split',...
                'Value', this.UseMergeSplit,...
                'Callback', @(src,evnt)set_UseMergeSplit(this,src));
            
            y = y -20;
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 y 170 15],...
                'FontSize', 8,...
                'String', 'Intensity Ratio:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            this.hMinAmpRatioEdit = ...
                uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [140 y 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.MinAmpRatio,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_MinAmpRatio(this,src));
            
            this.hMaxAmpRatioEdit = ...
                uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 y 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.MaxAmpRatio,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_MaxAmpRatio(this,src));
            if this.UseMergeSplit
                set([this.hMinAmpRatioEdit this.hMaxAmpRatioEdit],'Enable','on')
            else
                set([this.hMinAmpRatioEdit this.hMaxAmpRatioEdit],'Enable','off')
            end %if
            
            y = y -35;
            
            uicontrol(...
                'Style', 'pushbutton',...
                'Units','pixels',...
                'Position', [25 y 75 25],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', 'Test',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left',...
                'Callback', @(src,evnt)test_tracking_settings(this.Parent),...
                'Enable','off');
            
            uicontrol(...
                'Style', 'pushbutton',...
                'Units','pixels',...
                'Position', [125 y 75 25],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', 'Track',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left',...
                'Callback', @(src,evnt)reconstruct_trajectories(this.Parent));
            
            set(get(this.hFig,'Children'),...
                'Units', 'normalized',...
                'FontUnits', 'normalized',...
                'FontWeight','bold')
            set(this.hFig,'Units','pixels',...
                'Position', set_figure_position(225/y0, 0.45/225*y0,'center'))
        end %fun
        function set_linear_parameter(this)
            %check if gui already open
            if ishandle(this.hLinFig)
                waitfor(msgbox('SPECIAL MOTION MANAGER already open','INFO','help','modal'))
                figure(this.hLinFig)
                return
            end %if
            
            scrSize = get(0, 'ScreenSize');
            
            this.hLinFig = figure(...
                'Units','pixels',...
                'Position', ...
                [0.5*(scrSize(3)-225) 0.5*(scrSize(4)-100) 225 110],...
                'Name', 'SPECIAL MOTION MANAGER',...
                'NumberTitle', 'off',...
                'MenuBar', 'none',...
                'ToolBar', 'none',...
                'DockControls', 'off',...
                'Color', this.FamilyColor);
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 80 170 15],...
                'FontSize', 8,...
                'String', 'Min. Classification Length:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 80 40 15],...
                'FontSize', 8,...
                'String', this.LinClassifyLength,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_LinClassifyLength(this,src));
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 60 170 15],...
                'FontSize', 8,...
                'String', 'Search Expansion Factor:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 60 40 15],...
                'FontSize', 8,...
                'String', this.LinSearchExpFac,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_LinSearchExpFac(this,src));
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 40 170 15],...
                'FontSize', 8,...
                'String', 'Fast/Slow Phase Scaling:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [140 40 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.LinScaleFast,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_LinScaleFast(this,src));
            
            uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 40 40 15],...
                'FontSize', 8,...
                'FontUnits', 'normalized',...
                'String', this.LinScaleSlow,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_LinScaleSlow(this,src));
            
            uicontrol(...
                'Style', 'Text',...
                'Units','pixels',...
                'Position', [5 20 170 15],...
                'FontSize', 8,...
                'String', 'Max. Angle between Steps:',...
                'BackgroundColor', this.FamilyColor,...
                'HorizontalAlignment', 'left');
            
            uicontrol(...
                'Style', 'edit',...
                'Units','pixels',...
                'Position', [180 20 40 15],...
                'FontSize', 8,...
                'String', this.LinMaxAngle,...
                'BackgroundColor', [1 1 1],...
                'Callback', @(src,evnt)set_LinMaxAngle(this,src));
            
            set(get(this.hLinFig,'Children'),...
                'Units', 'normalized',...
                'FontUnits', 'normalized',...
                'FontWeight','bold')
            set(this.hLinFig,'Units','pixels',...
                'Position', set_figure_position(225/110, 0.245,'center'))
        end %fun
        
        function show_diffusion_radius(this,src)
            switch get(src,'Checked')
                case 'on'
                    set(src,'Checked','off')
                    set(this.hDiffRadii,'Visible','off')
                case 'off'
                    set(src,'Checked','on')
                    D=0.1;
                    r = sqrt(4*D*this.Frame2msec);
                    N=256;
                    rho=(0:N)*2*pi/N;
                    
                    this.hDiffRadii = line(bsxfun(@plus,...
                        (this.Data.Position_Y(this.ActiveParticle)-this.FieldOfView(1))*this.ActExp+1,r*cos(rho))',...
                        bsxfun(@plus,(this.Data.Position_X(this.ActiveParticle)-this.FieldOfView(2))*this.ActExp+1,r*sin(rho))');
            end %switch
        end %fun
        
        %% getter
        function trackstart = get.TrackStart(this)
            trackstart = this.SrcContainer.TrackStart;
        end %fun
        function trackend = get.TrackEnd(this)
            trackend = this.SrcContainer.TrackEnd;
        end %fun        
        function dim = get.Dim(this)
            dim = this.SrcContainer.Dim;
        end %fun
        function reslimit = get.ResLimit(this)
            reslimit = this.SrcContainer.ResLimit;
        end %fun
        function locdenswin = get.LocDensWin(this)
            locdenswin = this.SrcContainer.LocDensWin;
        end %fun
        function gappenalty = get.GapPenalty(this)
            gappenalty = this.SrcContainer.GapPenalty;
        end %fun
        function initminsearchrad = get.InitMinSearchRad(this)
            initminsearchrad = this.SrcContainer.InitMinSearchRad;
        end %fun
        function initmaxsearchrad = get.InitMaxSearchRad(this)
            initmaxsearchrad = this.SrcContainer.InitMaxSearchRad;
        end %fun
        function initsearchexpfac = get.InitSearchExpFac(this)
            initsearchexpfac = this.SrcContainer.InitSearchExpFac;
        end %fun
        function inituselocdens = get.InitUseLocDens(this)
            inituselocdens = this.SrcContainer.InitUseLocDens;
        end %fun
        function mincompoundlength = get.MinCompoundLength(this)
            mincompoundlength = this.SrcContainer.MinCompoundLength;
        end %fun
        function minsearchrad = get.MinSearchRad(this)
            minsearchrad = this.SrcContainer.MinSearchRad;
        end %fun
        function maxsearchrad = get.MaxSearchRad(this)
            maxsearchrad = this.SrcContainer.MaxSearchRad;
        end %fun
        function searchexpfac = get.SearchExpFac(this)
            searchexpfac = this.SrcContainer.SearchExpFac;
        end %fun
        function uselocdens = get.UseLocDens(this)
            uselocdens = this.SrcContainer.UseLocDens;
        end %fun
        function freescalefast = get.FreeScaleFast(this)
            freescalefast = this.SrcContainer.FreeScaleFast;
        end %fun
        function freescaleslow = get.FreeScaleSlow(this)
            freescaleslow = this.SrcContainer.FreeScaleSlow;
        end %fun
        function freescaletrans = get.FreeScaleTrans(this)
            freescaletrans = this.SrcContainer.FreeScaleTrans;
        end %fun
        function usegapclosure = get.UseGapClosure(this)
            usegapclosure = this.SrcContainer.UseGapClosure;
        end %fun
        function maxgap = get.MaxGap(this)
            maxgap = this.SrcContainer.MaxGap;
        end %fun
        function usemergesplit = get.UseMergeSplit(this)
            usemergesplit = this.SrcContainer.UseMergeSplit;
        end %fun
        function minampratio = get.MinAmpRatio(this)
            minampratio = this.SrcContainer.MinAmpRatio;
        end %fun
        function maxampratio = get.MaxAmpRatio(this)
            maxampratio = this.SrcContainer.MaxAmpRatio;
        end %fun
        function uselinmodel = get.UseLinModel(this)
            uselinmodel = this.SrcContainer.UseLinModel;
        end %fun
        function linclassifylength = get.LinClassifyLength(this)
            linclassifylength = this.SrcContainer.LinClassifyLength;
        end %fun
        function linsearchexpfac = get.LinSearchExpFac(this)
            linsearchexpfac = this.SrcContainer.LinSearchExpFac;
        end %fun
        function linscalefast = get.LinScaleFast(this)
            linscalefast = this.SrcContainer.LinScaleFast;
        end %fun
        function linscaleslow = get.LinScaleSlow(this)
            linscaleslow = this.SrcContainer.LinScaleSlow;
        end %fun
        function linscaletrans = get.LinScaleTrans(this)
            linscaletrans = this.SrcContainer.LinScaleTrans;
        end %fun
        function linmaxangle = get.LinMaxAngle(this)
            linmaxangle = this.SrcContainer.LinMaxAngle;
        end %fun
        
        %% setter
        function set_Profile(this,src)
            content = get(src,'String');
            value = get(src,'Value');
            
            profile = content{value};
            update_profile(this,profile)
        end %fun
        
        function set_TrackStart(this,src)
            %first frame >= LocStart & first frame <= TrackEnd
%             value = min(this.TrackEnd,max(this.Parent.LocStart,...
%                 str2double(get(src,'String'))));
            value = str2double(get(src,'String'));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).TrackStart = value;
            end %for
            this.SrcContainer.TrackStart = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_TrackEnd(this,src)
            %last frame >= TrackStart & last frame <= LocEnd
%             value = min(this.Parent.LocEnd,max(this.TrackStart,...
%                 str2double(get(src,'String'))));
            value = str2double(get(src,'String'));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).TrackEnd = value;
            end %for
            this.SrcContainer.TrackEnd = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        
        function set_Dim(this,src)
            value = get(src,'Value');
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).Dim = value;
            end %for
            this.SrcContainer.Dim = value;
            
            update_profile(this,'None')
        end %fun
        function set_LocDensWin(this,src)
            value = max(...
                str2double(get(src,'String')),1);
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).LocDensWin = value;
            end %for
            this.SrcContainer.LocDensWin = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_GapPenalty(this,src)
            value = max(...
                str2double(get(src,'String')),1);
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).GapPenalty = value;
            end %for
            this.SrcContainer.GapPenalty = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_UseLinModel(this,src)
            value = get(src,'Value');
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).UseLinModel = value;
            end %for
            this.SrcContainer.UseLinModel = value;
            
            if value
                set(this.hLinMotionSettingPush,'Enable','on')
            else
                set(this.hLinMotionSettingPush,'Enable','off')
            end %if
            
            update_profile(this,'None')
        end %fun
        function set_InitMinSearchRad(this,src)
            value = min(this.InitMaxSearchRad,...
                max(0,str2double(get(src,'String'))));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).InitMinSearchRad = value;
            end %for
            this.SrcContainer.InitMinSearchRad = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_InitMaxSearchRad(this,src)
            value = max(this.InitMinSearchRad,...
                str2double(get(src,'String')));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).InitMaxSearchRad = value;
            end %for
            this.SrcContainer.InitMaxSearchRad = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_InitUseLocDens(this,src)
            value = get(src,'Value');
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).InitUseLocDens = value;
            end %for
            this.SrcContainer.InitUseLocDens = value;
            
            if value || this.SrcContainer.UseLocDens
                set(this.hLocDensEdit,'Enable','on')
            else
                set(this.hLocDensEdit,'Enable','off')
            end %if
            
            update_profile(this,'None')
        end %fun
        function set_MinCompoundLength(this,src)
            value = max(1,...
                str2double(get(src,'String')));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).MinCompoundLength = value;
            end %for
            this.SrcContainer.MinCompoundLength = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_MinSearchRad(this,src)
            value = min(this.MaxSearchRad,...
                str2double(get(src,'String')));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).MinSearchRad = value;
            end %for
            this.SrcContainer.MinSearchRad = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_MaxSearchRad(this,src)
            value = max(this.MinSearchRad,...
                str2double(get(src,'String')));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).MaxSearchRad = value;
            end %for
            this.SrcContainer.MaxSearchRad = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_UseLocDens(this,src)
            value = get(src,'Value');
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).UseLocDens = value;
            end %for
            this.SrcContainer.UseLocDens = value;
            
            if this.SrcContainer.InitUseLocDens || value
                set(this.hLocDensEdit,'Enable','on')
            else
                set(this.hLocDensEdit,'Enable','off')
            end %if
            
            update_profile(this,'None')
        end %fun
        function set_FreeScaleSlow(this,src)
            value = str2double(get(src,'String'));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).FreeScaleSlow = value;
            end %for
            this.SrcContainer.FreeScaleSlow = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_FreeScaleFast(this,src)
            value = str2double(get(src,'String'));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).FreeScaleFast = value;
            end %for
            this.SrcContainer.FreeScaleFast = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_FreeScaleTrans(this,src)
            value = max(1, str2double(get(src,'String')));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).FreeScaleTrans = value;
            end %for
            this.SrcContainer.FreeScaleTrans = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_UseGapClosure(this,src)
            value = get(src,'Value');
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).UseGapClosure = value;
            end %for
            this.SrcContainer.UseGapClosure = value;
            
            if value
                set(this.hMaxGapEdit,'Enable','on')
                set(this.hFreeScaleFastEdit,'Enable','on')
                set(this.hFreeScaleSlowEdit,'Enable','on')
            else
                set(this.hMaxGapEdit,'Enable','off')
                set(this.hFreeScaleFastEdit,'Enable','off')
                set(this.hFreeScaleSlowEdit,'Enable','off')
            end %if
            
            update_profile(this,'None')
        end %fun
        function set_MaxGap(this,src)
            value = max(0,...
                str2double(get(src,'String')));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).MaxGap = value;
            end %for
            this.SrcContainer.MaxGap = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_UseMergeSplit(this,src)
            value = get(src,'Value');
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).UseMergeSplit = value;
            end %for
            this.SrcContainer.UseMergeSplit = value;
            
            if value
                set([this.hMinAmpRatioEdit this.hMaxAmpRatioEdit],'Enable','on')
            else
                set([this.hMinAmpRatioEdit this.hMaxAmpRatioEdit],'Enable','off')
            end %if
            
            update_profile(this,'None')
        end %fun
        function set_MinAmpRatio(this,src)
            value = str2double(get(src,'String'));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).MinAmpRatio = value;
            end %for
            this.SrcContainer.MinAmpRatio = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_MaxAmpRatio(this,src)
            value = str2double(get(src,'String'));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).MaxAmpRatio = value;
            end %for
            this.SrcContainer.MaxAmpRatio = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_LinClassifyLength(this,src)
            value = max(...
                str2double(get(src,'String'),2));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).LinClassifyLength = value;
            end %for
            this.SrcContainer.LinClassifyLength = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_LinSearchExpFac(this,src)
            value = max(...
                str2double(get(src,'String')),1);
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).LinSearchExpFac = value;
            end %for
            this.SrcContainer.LinSearchExpFac = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_LinScaleSlow(this,src)
            value = str2double(get(src,'String'));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).LinScaleSlow = value;
            end %for
            this.SrcContainer.LinScaleSlow = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_LinScaleFast(this,src)
            value = str2double(get(src,'String'));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).LinScaleFast = value;
            end %for
            this.SrcContainer.LinScaleFast = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_LinScaleTrans(this,src)
            value = max(...
                str2double(get(src,'String')),1);
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).LinScaleTrans = value;
            end %for
            this.SrcContainer.LinScaleTrans = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        function set_LinMaxAngle(this,src)
            value = min(max(...
                str2double(get(src,'String'),1),360));
            
            numTargets = numel(this.TargetContainer);
            for idx = 1:numTargets
                this.TargetContainer(idx).LinMaxAngle = value;
            end %for
            this.SrcContainer.LinMaxAngle = value;
            
            set(src,'String', value)
            update_profile(this,'None')
        end %fun
        
        %%
        function update_profile(this,profile)
            this.SrcContainer.Profile = profile;
            switch profile
                case 'None'
                    set(this.hProfilePopup,'Value',...
                        find(strcmp('None',this.SrcContainer.Profiles)))
                case 'Standard'
                    set_standard_properties(this.SrcContainer)
                    check_settings(this)
                    
                    close_object(this)
                    set_parameter(this)
                otherwise
                    SLIMfastPath = getappdata(0,'SLIMfastPath');
                    filename = fullfile(SLIMfastPath, ...
                        'Profiles', [this.SrcContainer.Profile '.txt']);
                    load_settings_from_disc(this.SrcContainer,filename)
                    check_settings(this)
                    
                    close_object(this)
                    set_parameter(this)
            end %switch
        end %fun
        
        %%
        function saveObj = saveobj(this)
            saveObj = saveobj@SuperclassManager(this);
        end %fun
        function close_object(this)
            if ishandle(this.hFig)
                delete(this.hFig)
            end %if
            if ishandle(this.hLinFig)
                delete(this.hLinFig)
            end %if
        end %fun
        function delete_object(this)
            if ishandle(this.hFig)
                delete(this.hFig)
            end %if
            if ishandle(this.hLinFig)
                delete(this.hLinFig)
            end %if
            
            delete_object@SuperclassManager(this)
        end %fun
    end %methods
    
    methods (Access = protected)
        function cpObj = copyElement(this)
            cpObj = copyElement@SuperclassManager(this);
            
            cpObj.hFig = nan;
            cpObj.hLinFig = nan;
        end %fun
    end %methods
    methods (Static)
        function this = loadobj(S)
            this = ManagerTrackSettings;
            this = loadobj@SuperclassManager(this,S);
        end %fun
    end %methods
end %classdef